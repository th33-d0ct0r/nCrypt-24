"use client";
import { useUser, useClerk  } from "@clerk/nextjs";
import { PacmanLoader } from "react-spinners";
import { useRouter } from "next/navigation";
import React, { useEffect, useState } from "react";
import { Notyf } from "notyf";
import "notyf/notyf.min.css";

interface School {
  schoolName: string;
  address: string;
  team: string[];
  StudentInchargeName: string;
  TeacherInchargeName: string;
  TeacherInchargeEmail: string;
  teamName: string;
  teamCode: string;
}

interface MongoUser {
  email: string;
  clerkId: string;
  name: string;
  schoolId: string;
}

export default function Page() {
  const { isLoaded, user } = useUser();
  const router = useRouter();
  const [mongoUser, setMongoUser] = useState({} as MongoUser);
  const [mongoUserLoading, setMongoUserLoading] = useState(true);
  const [mongoSchoolLoading, setMongoSchoolLoading] = useState(true);
  const notyf = new Notyf();
  const [school, setSchool] = useState({} as School);
  const { signOut } = useClerk()

  useEffect(() => {
    if (!isLoaded) return;

    fetch("/api/getUser", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ email: user?.primaryEmailAddress?.emailAddress }),
    })
      .then((res) => res.json())
      .then((data) => {
        console.log(data);
        if (data.mongoUser) {
          setMongoUserLoading(false);
          setMongoUser(data.mongoUser);
        } else {
          notyf.error("An error occured while fetching user.");
          setMongoUserLoading(false);
        }
      });

    fetch("/api/getSchool", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ email: user?.primaryEmailAddress?.emailAddress }),
    })
      .then((res) => res.json())
      .then((data) => {
        console.log(data);
        if (data.school) {
          setSchool(data.school);
          console.log("this is school", school);
          setMongoSchoolLoading(false);
        } else {
          notyf.error("An error occured while fetching user.");
          setMongoUserLoading(false);
        }
      });
  }, [isLoaded, user]);

  if (!isLoaded || mongoUserLoading || mongoSchoolLoading) {
    return (
      <div className="flex flex-col w-[100%] h-[100vh] items-center justify-center">
        <PacmanLoader className="justify-center items-center" color="#651DFF" />
      </div>
    );
  }

  return (
    <div className="flex flex-col items-center pt-0 py-[10vw] min-h-[100vh]">
      <img className="w-[100vw]" src="/banner.png" alt="" />
      <h1 className="text-2xl font-bold mt-[-5vh] bg-clip-text">
        {mongoUser.name}
      </h1>
      <p style={style}>{school.teamName}</p>

      <div className="flex mt-[5vh] flex-wrap w-[80%] items-center justify-center gap-2">
        <div className="rounded-lg bg-[#212121] w-[35vw] aspect-square flex flex-col items-center justify-center">
          <svg
            className="w-[20vw]"
            width="52"
            height="51"
            viewBox="0 0 52 51"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g opacity="0.7">
              <path
                d="M24.6572 32.5669L19.0147 26.9244C20.0229 25.1494 21.4934 23.3912 23.4243 21.6552C25.9141 19.4123 30.3089 15.6209 36.6068 10.2811C37.2449 9.73984 38.0632 9.4584 38.8992 9.49267C39.7352 9.52693 40.5277 9.87438 41.1193 10.466C41.7109 11.0576 42.0584 11.8502 42.0927 12.6862C42.1269 13.5221 41.8455 14.3404 41.3042 14.9785C35.957 21.2875 32.1675 25.6823 29.932 28.161C28.196 30.0864 26.4377 31.555 24.6572 32.5669ZM16.458 29.6222L21.9631 35.1254L19.4269 38.6643L9.63098 41.997L12.9192 32.1566L16.458 29.6222Z"
                fill="white"
              />
            </g>
          </svg>
          <h1 className="text-[#BCBCBC] text-sm mt-2">Edit Profile</h1>
        </div>
        <div className="rounded-lg bg-[#212121] w-[35vw] aspect-square flex flex-col items-center justify-center">
          <svg
            className="w-[20vw]"
            width="52"
            height="49"
            viewBox="0 0 52 49"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g opacity="0.7">
              <path
                d="M46.9128 18.3807H4.80054V14.3011C4.80054 13.2191 5.24422 12.1814 6.03398 11.4163C6.82373 10.6513 7.89487 10.2214 9.01176 10.2214H42.7015C43.8184 10.2214 44.8896 10.6513 45.6793 11.4163C46.4691 12.1814 46.9128 13.2191 46.9128 14.3011V18.3807ZM46.9128 24.5001V34.6992C46.9128 35.7811 46.4691 36.8188 45.6793 37.5839C44.8896 38.349 43.8184 38.7788 42.7015 38.7788H9.01176C7.89487 38.7788 6.82373 38.349 6.03398 37.5839C5.24422 36.8188 4.80054 35.7811 4.80054 34.6992V24.5001H46.9128ZM13.223 28.5797C12.6645 28.5797 12.129 28.7946 11.7341 29.1772C11.3392 29.5597 11.1174 30.0786 11.1174 30.6195C11.1174 31.1605 11.3392 31.6794 11.7341 32.0619C12.129 32.4444 12.6645 32.6594 13.223 32.6594H15.3286C15.887 32.6594 16.4226 32.4444 16.8175 32.0619C17.2124 31.6794 17.4342 31.1605 17.4342 30.6195C17.4342 30.0786 17.2124 29.5597 16.8175 29.1772C16.4226 28.7946 15.887 28.5797 15.3286 28.5797H13.223ZM23.751 28.5797C23.1926 28.5797 22.657 28.7946 22.2621 29.1772C21.8673 29.5597 21.6454 30.0786 21.6454 30.6195C21.6454 31.1605 21.8673 31.6794 22.2621 32.0619C22.657 32.4444 23.1926 32.6594 23.751 32.6594H34.2791C34.8375 32.6594 35.3731 32.4444 35.768 32.0619C36.1629 31.6794 36.3847 31.1605 36.3847 30.6195C36.3847 30.0786 36.1629 29.5597 35.768 29.1772C35.3731 28.7946 34.8375 28.5797 34.2791 28.5797H23.751Z"
                fill="white"
              />
            </g>
          </svg>
          <h1 className="text-[#BCBCBC] text-sm mt-2">Billing Details</h1>
        </div>
        <div onClick={() => router.push('/team')} className="rounded-lg bg-[#212121] w-[35vw] aspect-square flex flex-col items-center justify-center">
          <svg
            className="w-[20vw]"
            width="52"
            height="52"
            viewBox="0 0 52 52"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g opacity="0.7">
              <path
                d="M15.6093 26.855C15.7938 26.7763 15.9921 26.7354 16.1926 26.7347C16.3931 26.7339 16.5917 26.7734 16.7767 26.8508C16.9617 26.9281 17.1293 27.0418 17.2696 27.185C17.4099 27.3282 17.52 27.4982 17.5936 27.6847C17.6671 27.8712 17.7024 28.0706 17.6976 28.2711C17.6927 28.4715 17.6477 28.6689 17.5652 28.8517C17.4827 29.0345 17.3645 29.1988 17.2174 29.3351C17.0703 29.4713 16.8974 29.5767 16.7088 29.645C15.7062 30.0401 14.8456 30.7278 14.2391 31.6186C13.6326 32.5095 13.3083 33.5623 13.3083 34.64V37.25C13.3083 37.6478 13.4664 38.0294 13.7477 38.3107C14.029 38.592 14.4105 38.75 14.8083 38.75H26.8083C27.2062 38.75 27.5877 38.592 27.869 38.3107C28.1503 38.0294 28.3083 37.6478 28.3083 37.25V34.7795C28.3085 33.6672 27.9706 32.5811 27.3395 31.6652C26.7084 30.7494 25.8138 30.0469 24.7743 29.651C24.5847 29.5852 24.4101 29.4819 24.2611 29.3474C24.112 29.2129 23.9915 29.0498 23.9066 28.8678C23.8218 28.6858 23.7743 28.4887 23.7671 28.288C23.7598 28.0873 23.793 27.8873 23.8645 27.6997C23.936 27.512 24.0444 27.3407 24.1834 27.1958C24.3224 27.0508 24.489 26.9353 24.6735 26.8559C24.8579 26.7766 25.0564 26.7351 25.2572 26.7339C25.458 26.7327 25.657 26.7719 25.8424 26.849C27.4498 27.4613 28.8332 28.5475 29.8093 29.9638C30.7855 31.38 31.3082 33.0594 31.3083 34.7795V37.25C31.3083 38.4435 30.8342 39.5881 29.9903 40.432C29.1464 41.2759 28.0018 41.75 26.8083 41.75H14.8083C13.6149 41.75 12.4703 41.2759 11.6264 40.432C10.7825 39.5881 10.3083 38.4435 10.3083 37.25V34.64C10.3086 32.9602 10.8143 31.3194 11.7597 29.931C12.7051 28.5425 14.0465 27.4707 15.6093 26.855ZM20.8083 11.75C22.3996 11.75 23.9258 12.3821 25.051 13.5074C26.1762 14.6326 26.8083 16.1587 26.8083 17.75V20.75C26.8083 22.3413 26.1762 23.8674 25.051 24.9926C23.9258 26.1179 22.3996 26.75 20.8083 26.75C19.2171 26.75 17.6909 26.1179 16.5657 24.9926C15.4405 23.8674 14.8083 22.3413 14.8083 20.75V17.75C14.8083 16.1587 15.4405 14.6326 16.5657 13.5074C17.6909 12.3821 19.2171 11.75 20.8083 11.75ZM20.8083 14.75C20.0127 14.75 19.2496 15.0661 18.687 15.6287C18.1244 16.1913 17.8083 16.9544 17.8083 17.75V20.75C17.8083 21.5456 18.1244 22.3087 18.687 22.8713C19.2496 23.4339 20.0127 23.75 20.8083 23.75C21.604 23.75 22.3671 23.4339 22.9297 22.8713C23.4923 22.3087 23.8083 21.5456 23.8083 20.75V17.75C23.8083 16.9544 23.4923 16.1913 22.9297 15.6287C22.3671 15.0661 21.604 14.75 20.8083 14.75ZM34.3083 40.25C33.9105 40.25 33.529 40.092 33.2477 39.8107C32.9664 39.5294 32.8083 39.1478 32.8083 38.75C32.8083 38.3522 32.9664 37.9706 33.2477 37.6893C33.529 37.408 33.9105 37.25 34.3083 37.25H35.8083C36.2062 37.25 36.5877 37.092 36.869 36.8107C37.1503 36.5294 37.3083 36.1478 37.3083 35.75V32.993C37.3083 31.9267 36.9727 30.8875 36.3492 30.0225C35.7257 29.1575 34.8459 28.5107 33.8344 28.1735C33.6474 28.1113 33.4746 28.0128 33.3257 27.8838C33.1768 27.7547 33.0548 27.5976 32.9666 27.4214C32.8784 27.2452 32.8258 27.0534 32.8118 26.8568C32.7978 26.6603 32.8226 26.4629 32.8848 26.276C32.9471 26.0891 33.0456 25.9162 33.1746 25.7673C33.3036 25.6184 33.4608 25.4964 33.637 25.4083C33.8132 25.3201 34.005 25.2675 34.2015 25.2535C34.398 25.2394 34.5954 25.2643 34.7823 25.3265C36.3915 25.8627 37.7912 26.8917 38.783 28.2677C39.7748 29.6437 40.3084 31.2968 40.3083 32.993V35.75C40.3083 36.9435 39.8342 38.0881 38.9903 38.932C38.1464 39.7759 37.0018 40.25 35.8083 40.25H34.3083ZM29.8083 13.25C29.4105 13.25 29.029 13.092 28.7477 12.8107C28.4664 12.5294 28.3083 12.1478 28.3083 11.75C28.3083 11.3522 28.4664 10.9706 28.7477 10.6893C29.029 10.408 29.4105 10.25 29.8083 10.25C31.3996 10.25 32.9258 10.8821 34.051 12.0074C35.1762 13.1326 35.8083 14.6587 35.8083 16.25V19.25C35.8083 20.8413 35.1762 22.3674 34.051 23.4926C32.9258 24.6179 31.3996 25.25 29.8083 25.25C29.4105 25.25 29.029 25.092 28.7477 24.8107C28.4664 24.5294 28.3083 24.1478 28.3083 23.75C28.3083 23.3522 28.4664 22.9706 28.7477 22.6893C29.029 22.408 29.4105 22.25 29.8083 22.25C30.604 22.25 31.3671 21.9339 31.9297 21.3713C32.4923 20.8087 32.8083 20.0456 32.8083 19.25V16.25C32.8083 15.4544 32.4923 14.6913 31.9297 14.1287C31.3671 13.5661 30.604 13.25 29.8083 13.25Z"
                fill="white"
              />
            </g>
          </svg>
          <h1 className="text-[#BCBCBC] text-sm mt-2">Your Team</h1>
        </div>
        <div onClick={() => signOut()} className="rounded-lg bg-[#212121] w-[35vw] aspect-square flex flex-col items-center justify-center">
          <svg
            className="w-[20vw]"
            width="52"
            height="52"
            viewBox="0 0 52 52"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clip-path="url(#clip0_228_70)">
              <g opacity="0.7">
                <path
                  d="M13.8375 24.053H25.5917C25.8653 24.053 26.1362 24.1068 26.3889 24.2115C26.6417 24.3162 26.8714 24.4697 27.0648 24.6632C27.2583 24.8566 27.4117 25.0863 27.5164 25.339C27.6211 25.5918 27.675 25.8627 27.675 26.1363C27.675 26.4099 27.6211 26.6808 27.5164 26.9336C27.4117 27.1863 27.2583 27.416 27.0648 27.6094C26.8714 27.8029 26.6417 27.9563 26.3889 28.061C26.1362 28.1657 25.8653 28.2196 25.5917 28.2196H13.8375L16.175 30.5571C16.5656 30.948 16.785 31.4781 16.7848 32.0308C16.7846 32.5834 16.5649 33.1134 16.174 33.504C15.783 33.8946 15.253 34.114 14.7003 34.1138C14.1477 34.1136 13.6177 33.8939 13.2271 33.503L7.33542 27.6113C7.14097 27.4182 6.98665 27.1886 6.88133 26.9356C6.77602 26.6827 6.7218 26.4114 6.7218 26.1373C6.7218 25.8633 6.77602 25.592 6.88133 25.339C6.98665 25.0861 7.14097 24.8564 7.33542 24.6634L13.225 18.7717C13.6156 18.3808 14.1456 18.1611 14.6982 18.1609C15.2509 18.1607 15.781 18.38 16.1719 18.7707C16.5628 19.1613 16.7825 19.6912 16.7827 20.2439C16.7829 20.7965 16.5636 21.3266 16.1729 21.7175L13.8375 24.053ZM33.8083 7.74463C34.3609 7.74463 34.8908 7.96412 35.2815 8.35482C35.6722 8.74552 35.8917 9.27543 35.8917 9.82796V43.1613C35.8917 43.7138 35.6722 44.2437 35.2815 44.6344C34.8908 45.0251 34.3609 45.2446 33.8083 45.2446C33.2558 45.2446 32.7259 45.0251 32.3352 44.6344C31.9445 44.2437 31.725 43.7138 31.725 43.1613V9.82796C31.725 9.27543 31.9445 8.74552 32.3352 8.35482C32.7259 7.96412 33.2558 7.74463 33.8083 7.74463Z"
                  fill="white"
                />
              </g>
              <h1 className="text-[#BCBCBC]">Sign Out</h1>
            </g>
            <defs>
              <clipPath id="clip0_228_70">
                <rect
                  width="50.5347"
                  height="50.5347"
                  fill="white"
                  transform="translate(0.589355 0.959961)"
                />
              </clipPath>
            </defs>
          </svg>
          <h1 className="text-[#BCBCBC] text-sm mt-2">Sign Out</h1>
        </div>
      </div>

      <img
        className="w-[72vw] mt-[6vh] mb-[16vh]"
        src="/leaderboard.png"
        alt=""
      />
    </div>
  );
}

const style = {
  background: "linear-gradient(259deg, #EE2A70 27.19%, #881840 96.05%)",
  WebkitBackgroundClip: "text",
  WebkitTextFillColor: "transparent",
  display: "inline-block",
  marginTop: "1.5vh",
};
